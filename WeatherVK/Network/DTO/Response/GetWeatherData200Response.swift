//
// GetWeatherData200Response.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GetWeatherData200Response: Codable, Hashable {

    public var coord: GetWeatherData200ResponseCoord?
    public var weather: [GetWeatherData200ResponseWeatherInner]?
    public var base: String?
    public var main: GetWeatherData200ResponseMain?
    public var visibility: Int?
    public var wind: GetWeatherData200ResponseWind?
    public var clouds: GetWeatherData200ResponseClouds?
    public var dt: Int?
    public var sys: GetWeatherData200ResponseSys?
    public var timezone: Int?
    public var id: Int?
    public var name: String?
    public var cod: Int?

    public init(coord: GetWeatherData200ResponseCoord? = nil, weather: [GetWeatherData200ResponseWeatherInner]? = nil, base: String? = nil, main: GetWeatherData200ResponseMain? = nil, visibility: Int? = nil, wind: GetWeatherData200ResponseWind? = nil, clouds: GetWeatherData200ResponseClouds? = nil, dt: Int? = nil, sys: GetWeatherData200ResponseSys? = nil, timezone: Int? = nil, id: Int? = nil, name: String? = nil, cod: Int? = nil) {
        self.coord = coord
        self.weather = weather
        self.base = base
        self.main = main
        self.visibility = visibility
        self.wind = wind
        self.clouds = clouds
        self.dt = dt
        self.sys = sys
        self.timezone = timezone
        self.id = id
        self.name = name
        self.cod = cod
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case coord
        case weather
        case base
        case main
        case visibility
        case wind
        case clouds
        case dt
        case sys
        case timezone
        case id
        case name
        case cod
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(coord, forKey: .coord)
        try container.encodeIfPresent(weather, forKey: .weather)
        try container.encodeIfPresent(base, forKey: .base)
        try container.encodeIfPresent(main, forKey: .main)
        try container.encodeIfPresent(visibility, forKey: .visibility)
        try container.encodeIfPresent(wind, forKey: .wind)
        try container.encodeIfPresent(clouds, forKey: .clouds)
        try container.encodeIfPresent(dt, forKey: .dt)
        try container.encodeIfPresent(sys, forKey: .sys)
        try container.encodeIfPresent(timezone, forKey: .timezone)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(cod, forKey: .cod)
    }
}

