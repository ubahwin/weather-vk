//
// WeatherResponseCurrent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WeatherResponseCurrent: Codable, Hashable {

    public var lat: Double?
    public var lon: Double?
    public var tz: String?
    public var date: Date?
    public var units: String?
    public var cloudCover: WeatherResponseCurrentCloudCover?
    public var humidity: WeatherResponseCurrentCloudCover?
    public var precipitation: WeatherResponseCurrentPrecipitation?
    public var temperature: WeatherResponseCurrentTemperature?
    public var pressure: WeatherResponseCurrentCloudCover?
    public var wind: WeatherResponseCurrentWind?

    public init(lat: Double? = nil, lon: Double? = nil, tz: String? = nil, date: Date? = nil, units: String? = nil, cloudCover: WeatherResponseCurrentCloudCover? = nil, humidity: WeatherResponseCurrentCloudCover? = nil, precipitation: WeatherResponseCurrentPrecipitation? = nil, temperature: WeatherResponseCurrentTemperature? = nil, pressure: WeatherResponseCurrentCloudCover? = nil, wind: WeatherResponseCurrentWind? = nil) {
        self.lat = lat
        self.lon = lon
        self.tz = tz
        self.date = date
        self.units = units
        self.cloudCover = cloudCover
        self.humidity = humidity
        self.precipitation = precipitation
        self.temperature = temperature
        self.pressure = pressure
        self.wind = wind
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case lat
        case lon
        case tz
        case date
        case units
        case cloudCover = "cloud_cover"
        case humidity
        case precipitation
        case temperature
        case pressure
        case wind
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(lat, forKey: .lat)
        try container.encodeIfPresent(lon, forKey: .lon)
        try container.encodeIfPresent(tz, forKey: .tz)
        try container.encodeIfPresent(date, forKey: .date)
        try container.encodeIfPresent(units, forKey: .units)
        try container.encodeIfPresent(cloudCover, forKey: .cloudCover)
        try container.encodeIfPresent(humidity, forKey: .humidity)
        try container.encodeIfPresent(precipitation, forKey: .precipitation)
        try container.encodeIfPresent(temperature, forKey: .temperature)
        try container.encodeIfPresent(pressure, forKey: .pressure)
        try container.encodeIfPresent(wind, forKey: .wind)
    }
}

